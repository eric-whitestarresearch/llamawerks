#     Llamaflow - A self service portal with runbook automation
#     Copyright (C) 2024  Whitestar Research LLC
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#      Unless required by applicable law or agreed to in writing, software
#      distributed under the License is distributed on an "AS IS" BASIS,
#      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#      See the License for the specific language governing permissions and
#      limitations under the License.

openapi: 3.0.0
info:
  title: "RP Flask REST API"
  description: "An API about people and notes"
  version: "1.0.0"
servers:
  - url: "/api"

components:
  schemas:
    data_collection:
      type: "object"
      required:
        - collection_name
        - pack
        - fields
      properties:
        collection_name:
          type: "string"
          description: "The name of this data collection"
        pack:
          type: "string"
          description: "The pack this collection belongs to"
        fields:
          type: array
          items:
            type: object
            required:
              - name
              - type
              - required
            properties:
              name:
                type: string
                description: "The name of the field"
              type:
                type: string
                enum:
                  - "string"
                  - "integer"
                  - "float"
                  - "datetime"
                  - "boolean"
                description: "The type of data in the field"
              required:
                type: boolean
                description: "Is this a required or optional field"
  parameters:
    pack_name:
      name: "pack_name"
      description: "The name of the pack the item is in"
      in: path
      required: True
      schema:
        type: "string"
paths:
  /service_engine/dosomething:
    get:
      operationId: "service_engine.do_something"
      responses:
        "200":
          description: "Something happened"
  /service_engine/{pack_name}/data_collection:
    get:
      operationId: "service_engine.get_all_data_collections"
      parameters:
        - $ref: "#/components/parameters/pack_name"
      responses:
        "200":
          description: "Get all of the data collections"
    put:
      operationId: "service_engine.create_data_collection"
      parameters:
        - $ref: "#/components/parameters/pack_name"
      requestBody:
        x-body-name: "data_collection_definition"
        description: "The definition of the data collection"
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/data_collection"
      responses:
        "200":
          description: "Successfully created the data collection"
        "400":
          description: "The body does not meet the scema requirements"
        "409":
          description: "The data collection already exists in this pack"
        "422":
          description: "The pack name specified in the URI and the data collection defination do not match"
#     Llamaflow - A self service portal with runbook automation
#     Copyright (C) 2024  Whitestar Research LLC
#
#     Licensed under the Apache License, Version 2.0 (the "License");
#     you may not use this file except in compliance with the License.
#     You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#      Unless required by applicable law or agreed to in writing, software
#      distributed under the License is distributed on an "AS IS" BASIS,
#      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#      See the License for the specific language governing permissions and
#      limitations under the License.

openapi: 3.0.0
info:
  title: Llamawerks Service Engine API
  description: API for Llamawerks service engine
  version: "0.1.0"
servers:
  - url: "/api"

components:
  schemas:
    service_component_deleted:
      type: object
      properties:
        deleted:
          type: integer
          example: 1
    service_component_updated:
      type: object
      properties:
        updated:
          type: integer
          example: 1
    service_component_created:
      type: object
      properties:
        id:
          type: string
          example: 66ce0c6f2ee6c75d61eef299
    data_collection_created:
      type: object
      properties:
        id:
          type: string
          example: 66ce0c6f2ee6c75d61eef299
        indexes:
          type: array
          example:
            - name_1
            - color_1
    data_collection:
      type: object
      required:
        - name
        - pack
        - fields
      additionalProperties: false
      properties:
        name:
          type: string
          description: The name of this data collection
        pack:
          type: string
          description: The pack this collection belongs to
        fields:
          type: array
          items:
            type: object
            required:
              - name
              - type
              - required
              - index
              - unique
            properties:
              name:
                type: string
                description: The name of the field
              type:
                type: string
                enum:
                  - string
                  - integer
                  - float
                  - datetime
                  - boolean
                description: The type of data in the field
              required:
                type: boolean
                description: Is this a required or optional field
              index:
                type: boolean
                description: Is this field an index, must be of string type
              unique:
                type: boolean
                description: If this is an index field, is it unique
    data_collection_filter:
      type: object
      required:
        - name
        - pack
        - filter
        - variables
      additionalProperties: false
      properties:
        name:
          type: string
          description: The name of this data collection filter
        pack:
          type: string
          description: The pack this data collection filter belongs to
        filter:
          type: object
          items:
            type: object
        variables:
          type: array
          description: A list of variables used in the query
          items:
            type: object
            required:
              - name
              - type
            additionalProperties: false
            properties:
              name: 
                type: string
                description: The name of the variable in the query
              type:
                type: string
                description: The type of the variable
                enum:
                  - string
                  - integer
                  - float
                  - datetime
                  - boolean
  parameters:
    pack_name:
      name: pack_name
      description: The name of the pack the component is in
      in: path
      required: True
      schema:
        type: string
    data_collection_name:
      name: data_collection_name
      description: The name of the data collection to use
      in: path
      required: True
      schema:
        type: string
    document_id:
      name: document_id
      description: The id of the document
      in: path
      required: True
      schema:
        type: string
    collection_name_in_query:
      name: data_collection_name
      description: The name of the data collection to use
      in: query
      required: False
      schema:
        type: string
    collection_name_in_query_req:
      name: data_collection_name
      description: The name of the data collection to use
      in: query
      required: True
      schema:
        type: string
    filter_name_in_query:
      name: filter_name
      description: The name of the data collection filter to use
      in: query
      required: False
      schema:
        type: string
    filter_name_in_query_req:
      name: filter_name
      description: The name of the data collection filter to use
      in: query
      required: True
      schema:
        type: string
paths:
  /service_engine/{pack_name}/data_collection:
    get:
      operationId: data_collection.get_data_collections
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/collection_name_in_query"
      responses:
        "200":
          description: Get all of the data collections
        "204":
          description: There are no data collections in the pack
        "404":
          description: Could not find the data collection in the pack
      tags:
        - Data Collection
    put:
      operationId: data_collection.create_data_collection
      parameters:
        - $ref: "#/components/parameters/pack_name"
      requestBody:
        x-body-name: data_collection_definition
        description: The definition of the data collection
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/data_collection"
      responses:
        "200":
          description: The data collection already exists, no action taken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/data_collection_created"
        "201":
          description: Successfully created the data collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/data_collection_created"
        "400":
          description: The body does not meet the schema requirements
        "422":
          description: The pack name specified in the URI and the data collection definition do not match
      tags:
        - Data Collection
    patch:
      operationId: data_collection.update_data_collection
      parameters:
        - $ref: "#/components/parameters/pack_name"
      requestBody:
        x-body-name: data_collection_definition
        description: The definition of the data collection
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/data_collection"
      responses:
        "202":
          description: Data collection definition updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
        "208":
          description: Data collection definition matched existing definition, no change occured 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
        "400":
          description: The body does not meet the schema requirements
        "404":
          description: The data collection does not exist in the pack. Create it using the put method
        "422":
          description: The pack name specified in the URI and the data collection definition do not match
      tags:
        - Data Collection
    delete:
      operationId: data_collection.delete_data_collection
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/collection_name_in_query_req"
      responses:
        "200":
          description: Data collection deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
      tags:
        - Data Collection
  /service_engine/{pack_name}/filter:
    get:
      operationId: data_collection_filter.get_data_collection_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/filter_name_in_query"
      responses:
        "200":
          description: Retreived the filter definition(s)
        "204":
          description: There are no filters in the pack
        "404":
          description: Could not find the filterin the pack
      tags:
        - Data Collection Filter
    put:
      operationId: data_collection_filter.create_data_collection_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
      requestBody:
        x-body-name: data_collection_filter_definition
        description: The definition of the data collection filter
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/data_collection_filter"
      responses:
        "200":
          description: The data collection filter already exists, no action taken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_created"
        "201":
          description: Successfully created the data collection filter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_created"
        "400":
          description: The body does not meet the schema requirements
        "422":
          description: The pack name specified in the URI and the data collection filter definition do not match
      tags:
        - Data Collection Filter
    patch:
      operationId: data_collection_filter.update_data_collection_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
      requestBody:
        x-body-name: data_collection_filter_definition
        description: The definition of the data collection
        required: True
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/data_collection_filter"
      responses:
        "202":
          description: Data collection filter definition updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
        "208":
          description: Data collection definition filter matched existing definition, no change occured 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
        "400":
          description: The body does not meet the schema requirements
        "404":
          description: The data collection filter does not exist in the pack. Create it using the put method
        "422":
          description: The pack name specified in the URI and the data collection filter definition do not match
      tags:
        - Data Collection Filter
    delete:
      operationId: data_collection_filter.delete_data_collection_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/filter_name_in_query_req"
      responses:
        "200":
          description: Data collection deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/service_component_deleted"
      tags:
        - Data Collection Filter
  /service_engine/{pack_name}/data_collection/{data_collection_name}:
    get:
      operationId: document.get_documents
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
      responses:
        "200":
          description: Get all of the data collections
        "204":
          description: There are no data collections in the pack
        "404":
          description: Could not find the data collection in the pack
      tags:
        - Documents
    post:
      operationId: document.get_document_with_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
        - $ref: "#/components/parameters/filter_name_in_query_req"
      requestBody:
        x-body-name: filter_variables
        description: Variables for the filter
        required: True
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Get all of the data collections
      tags:
        - Documents
    put:
      operationId: document.create_document
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
      requestBody:
        x-body-name: document
        description: The document to add
        required: True
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Created the document
      tags:
        - Documents
    patch:
      operationId: document.update_document_by_filter
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
        - $ref: "#/components/parameters/filter_name_in_query_req"
      requestBody:
        x-body-name: document_and_vars
        description: The updates to the document and the variables
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                variables:
                  type: object
                document:
                  type: object
              required:
                - variables
                - document
      responses:
        "200":
          description: Updated the document
      tags:
        - Documents
  /service_engine/{pack_name}/data_collection/{data_collection_name}/id/{document_id}:
    get:
      operationId: document.get_document_by_id
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
        - $ref: "#/components/parameters/document_id"
      responses:
        "200":
          description: Get all of the data collections
        "204":
          description: There are no data collections in the pack
        "404":
          description: Could not find the data collection in the pack
      tags:
        - Documents
    patch:
      operationId: document.update_document_by_id
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
        - $ref: "#/components/parameters/document_id"
      requestBody:
        x-body-name: document
        description: The updates to the document and the variables
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                document:
                  type: object
              required:
                - document
      responses:
        "200":
          description: Updated the document
      tags:
        - Documents
    delete:
      operationId: document.delete_document_by_id
      parameters:
        - $ref: "#/components/parameters/pack_name"
        - $ref: "#/components/parameters/data_collection_name"
        - $ref: "#/components/parameters/document_id"
      responses:
        "200":
          description: Deleted the document
      tags:
        - Documents

      




    
        
